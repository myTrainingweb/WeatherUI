{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { WeatherService } from './weather.service';\nlet WeatherComponent = class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.city = '';\n    this.date = '';\n    this.result = '';\n    this.loading = false;\n  }\n  getWeather() {\n    if (!this.city) return alert('Please enter a city');\n    this.loading = true;\n    this.weatherService.getWeather(this.city, this.date).subscribe(res => {\n      this.result = res.fulfillmentText;\n      this.loading = false;\n    }, err => {\n      this.result = 'Error fetching weather data';\n      this.loading = false;\n    });\n  }\n};\nWeatherComponent = __decorate([Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html'\n}), __metadata(\"design:paramtypes\", [WeatherService])], WeatherComponent);\nexport { WeatherComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}